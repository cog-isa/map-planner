(define (domain domain_HTNroom)
	(:requirements :typing :hierachie)
	(:types
		block - locatable
		room - object
		agent - locatable
		locatable - object
	)
	(:predicates
		(hallway ?arg0 - room ?arg1 - room)
		(at ?arg0 - locatable ?arg1 - room)
		(holding ?arg0 - block ?arg1 - agent)
		(handempty ?ag - agent)
	)
	(:task deliver
		:parameters (?bl- block ?r - room)
		:precondition ()
		:effect ()
	)

	(:task deliver_ordering
		:parameters (?bl- block ?r - room)
		:precondition ()
		:effect ()
	)

	(:task get_to
		:parameters (?ag - agent ?r - room)
		:precondition ()
		:effect ()
	)

	(:task get_to_ordering
		:parameters (?ag - agent ?rA - room ?rB - room ?rC - room)
		:precondition ()
		:effect ()
	)

	(:task load
		:parameters (?ag - agent ?r - room ?bl - block)
		:precondition ()
		:effect ()
	)

	(:task unload
		:parameters (?ag - agent ?r - room ?bl - block)
		:precondition ()
		:effect ()
	)
	(:method m_deliver_ordering_0
		:parameters (?rA - room ?rB - room ?bl - block ?ag - agent)
		:task (deliver ?bl ?rB)
		:subtasks (and
		 (task0 (get_to ?ag ?rA))
		 (task1 (load ?ag ?rA ?bl))
		 (task2 (get_to ?ag ?rB))
		 (task3 (unload ?ag ?rB ?bl))
		)
		:ordering (and
			(task0 < task1)
			(task1 < task2)
			(task2 < task3)
		)
	)

	(:method m_deliver_via_ordering
		:parameters (?rA - room ?rB - room ?rC - room ?bl - block ?ag - agent)
		:task (deliver_ordering ?bl ?rC)
		:subtasks (and
		 (task0 (get_to ?ag ?rA))
		 (task1 (load ?ag ?rA ?bl))
		 (task2 (get_to_ordering ?ag ?rA ?rB ?rC))
		 (task3 (unload ?ag ?rC ?bl))
		)
		:ordering (and
			(task0 < task1)
			(task1 < task2)
			(task2 < task3)
		)
	)

	(:method m_unload_ordering_0
		:parameters (?r - room ?bl - block ?ag - agent)
		:task (unload ?ag ?r ?bl)
		:subtasks (and
		 (task0 (putdown ?ag ?r ?bl))
		)
	)

	(:method m_load_ordering_0
		:parameters (?r - room ?bl - block ?ag - agent)
		:task (load ?ag ?r ?bl)
		:subtasks (and
		 (task0 (pickup ?ag ?r ?bl))
		)
	)

	(:method m_drive_to_ordering_0
		:parameters (?rA - room ?rB - room ?ag - agent)
		:task (get_to ?ag ?rB)
		:subtasks (and
		 (task0 (drive ?ag ?rA ?rB))
		)
	)

	(:method m_get_to_via_ordering_0
		:parameters (?rA - room ?rB - room ?rC - room ?ag - agent)
		:task (get_to_ordering ?ag ?rA ?rB ?rC)
		:subtasks (and
		 (task0 (drive ?ag ?rA ?rB))
		 (task1 (drive ?ag ?rB ?rC))
		)
		:ordering (and
			(task0 < task1)
		)
	)
	(:action drive
		:parameters (?ag - agent ?rA - room ?rB - room)
		:precondition
			(and
				(at ?ag ?rA)
				(hallway ?rA ?rB)
			)
		:effect
			(and
				(not (at ?ag ?rA))
				(at ?ag ?rB)
				(hallway ?rA ?rB)
			)
	)

	(:action pickup
		:parameters (?ag - agent ?r - room ?bl - block)
		:precondition
			(and
				(at ?ag ?r)
				(at ?bl ?r)
				(handempty ?ag)
			)
		:effect
			(and
				(not (at ?bl ?r))
				(not (handempty ?ag))
				(holding ?bl ?ag)
				(at ?ag ?r)
			)
	)

	(:action putdown
		:parameters (?ag - agent ?r - room ?bl - block)
		:precondition
			(and
				(at ?ag ?r)
				(holding ?bl ?ag)
			)
		:effect
			(and
				(not (holding ?bl ?ag))
				(at ?bl ?r)
				(at ?ag ?r)
				(handempty ?ag)
			)
	)
)